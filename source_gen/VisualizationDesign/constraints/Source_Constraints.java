package VisualizationDesign.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SReferenceLinkId;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;

public class Source_Constraints extends BaseConstraintsDescriptor {
  public Source_Constraints() {
    super(MetaIdFactory.conceptId(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x3591b3be36b3a944L));
  }
  @Override
  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {
    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();
    references.put(MetaIdFactory.refId(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x3591b3be36b3a944L, 0x3591b3be36b3a981L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x3591b3be36b3a944L, 0x3591b3be36b3a981L), this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_4mlkax_a0a0a0a0a1a0b0a1a1;
          }
          @Override
          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            {
              List<SNode> catsNodes = SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getReferenceNode(), MetaAdapterFactory.getReferenceLink(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x3591b3be36b3a944L, 0x3591b3be36b3a947L, "data")), MetaAdapterFactory.getContainmentLink(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x2648c4bd4d62439cL, 0x3591b3be36b3a90cL, "categories"));
              return ListScope.forNamedElements(catsNodes);
            }
          }
        };
      }
    });
    references.put(MetaIdFactory.refId(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x3591b3be36b3a944L, 0x3591b3be36b3a947L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x3591b3be36b3a944L, 0x3591b3be36b3a947L), this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_4mlkax_a0a0a0a0a1a0b0a2a1;
          }
          @Override
          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            {
              List<SNode> refs = SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x2648c4bd4d623968L, "VisualizationDesign.structure.Dashboard"), false, false), MetaAdapterFactory.getContainmentLink(0x29d64dc129c149b2L, 0xb7eabe15992b2c4aL, 0x2648c4bd4d623968L, 0x3591b3be36ad9e2fL, "data"));
              return ListScope.forNamedElements(refs);
            }
          }
        };
      }
    });
    return references;
  }
  private static SNodePointer breakingNode_4mlkax_a0a0a0a0a1a0b0a1a1 = new SNodePointer("r:dc2e7fd3-98a3-482e-89de-b4d21fd86e7a(VisualizationDesign.constraints)", "3860063985178424772");
  private static SNodePointer breakingNode_4mlkax_a0a0a0a0a1a0b0a2a1 = new SNodePointer("r:dc2e7fd3-98a3-482e-89de-b4d21fd86e7a(VisualizationDesign.constraints)", "3860063985177968870");
}
