package VisualizationDesign.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Category_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Cell_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Column_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Dashboard_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Data_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new HowQualifier_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Interaction_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Line_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Source_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Visualization_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Window_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"VisualizationDesign.structure.Category", "VisualizationDesign.structure.Cell", "VisualizationDesign.structure.Column", "VisualizationDesign.structure.Dashboard", "VisualizationDesign.structure.Data", "VisualizationDesign.structure.HowQualifier", "VisualizationDesign.structure.Interaction", "VisualizationDesign.structure.Line", "VisualizationDesign.structure.Source", "VisualizationDesign.structure.Visualization", "VisualizationDesign.structure.Window"};
}
