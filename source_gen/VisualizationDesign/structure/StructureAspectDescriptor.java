package VisualizationDesign.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Boolean").super_("VisualizationDesign.structure.Param").parents("VisualizationDesign.structure.Param").properties("value").create();
      case 1:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Concern").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"params"}, new boolean[]{true}).create();
      case 2:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Dashboard").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.util.structure.IMainClass", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"windows"}, new boolean[]{true}).create();
      case 3:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Data").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("url", "semantics").children(new String[]{"concerns"}, new boolean[]{true}).create();
      case 4:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.EElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();
      case 5:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Enumeration").super_("VisualizationDesign.structure.Param").parents("VisualizationDesign.structure.Param").children(new String[]{"value"}, new boolean[]{true}).create();
      case 6:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Interaction").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("target").abstract_().create();
      case 7:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.MoveTo").super_("VisualizationDesign.structure.Interaction").parents("VisualizationDesign.structure.Interaction").create();
      case 8:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Numerical").super_("VisualizationDesign.structure.Param").parents("VisualizationDesign.structure.Param").properties("value").create();
      case 9:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Param").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
      case 10:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Reduce").super_("VisualizationDesign.structure.Interaction").parents("VisualizationDesign.structure.Interaction").properties("dimension").create();
      case 11:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Textual").super_("VisualizationDesign.structure.Param").parents("VisualizationDesign.structure.Param").properties("value").create();
      case 12:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.VBox").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("position").children(new String[]{"visualizations"}, new boolean[]{true}).alias("column", "").create();
      case 13:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Visualization").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("description").children(new String[]{"concerns", "data", "interactions"}, new boolean[]{true, true, true}).create();
      case 14:
        return new ConceptDescriptorBuilder("VisualizationDesign.structure.Window").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").references("precededBy", "followedBy").children(new String[]{"columns"}, new boolean[]{true}).create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"VisualizationDesign.structure.Boolean", "VisualizationDesign.structure.Concern", "VisualizationDesign.structure.Dashboard", "VisualizationDesign.structure.Data", "VisualizationDesign.structure.EElement", "VisualizationDesign.structure.Enumeration", "VisualizationDesign.structure.Interaction", "VisualizationDesign.structure.MoveTo", "VisualizationDesign.structure.Numerical", "VisualizationDesign.structure.Param", "VisualizationDesign.structure.Reduce", "VisualizationDesign.structure.Textual", "VisualizationDesign.structure.VBox", "VisualizationDesign.structure.Visualization", "VisualizationDesign.structure.Window"};
}
