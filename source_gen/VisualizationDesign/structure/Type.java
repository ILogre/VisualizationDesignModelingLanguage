package VisualizationDesign.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Type {
  num("num", "Numerical"),
  bool("bool", "Boolean"),
  str("str", "String");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<Type> getConstants() {
    List<Type> list = ListSequence.fromList(new LinkedList<Type>());
    ListSequence.fromList(list).addElement(Type.num);
    ListSequence.fromList(list).addElement(Type.bool);
    ListSequence.fromList(list).addElement(Type.str);
    return list;
  }

  public static Type getDefault() {
    return Type.num;
  }

  public static Type parseValue(String value) {
    if (value == null) {
      return Type.getDefault();
    }
    if (value.equals(Type.num.getValueAsString())) {
      return Type.num;
    }
    if (value.equals(Type.bool.getValueAsString())) {
      return Type.bool;
    }
    if (value.equals(Type.str.getValueAsString())) {
      return Type.str;
    }
    return Type.getDefault();
  }

  private String myValue;

  Type(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
