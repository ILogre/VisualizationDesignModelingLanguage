package VisualizationDesign.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Type {
  Numerical("num", "Numerical"),
  Boolean("bool", "Boolean"),
  String("string", "String");

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return this.myValue;
  }
  public static List<Type> getConstants() {
    List<Type> list = ListSequence.fromList(new LinkedList<Type>());
    ListSequence.fromList(list).addElement(Type.Numerical);
    ListSequence.fromList(list).addElement(Type.Boolean);
    ListSequence.fromList(list).addElement(Type.String);
    return list;
  }
  public static Type getDefault() {
    return null;
  }
  public static Type parseValue(String value) {
    if (value == null) {
      return Type.getDefault();
    }
    if (value.equals(Type.Numerical.getValueAsString())) {
      return Type.Numerical;
    }
    if (value.equals(Type.Boolean.getValueAsString())) {
      return Type.Boolean;
    }
    if (value.equals(Type.String.getValueAsString())) {
      return Type.String;
    }
    return Type.getDefault();
  }
  private String myValue;
  Type(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }
  public String getValue() {
    return this.myValue;
  }
}
